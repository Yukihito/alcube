#version 330 core

layout(location = 0) in vec3 vertexPosition_instance;
layout(location = 1) in vec3 vertexNormal_model;
layout(location = 2) in vec4 instancePosition_model;
layout(location = 3) in vec4 instanceColor;

out vec3 eyeDirection_camera;
out vec3 normal_camera;
out vec3 vertexColor;

uniform mat4 VP;
uniform mat4 V;

void main() {
  vec3 vertexPosition_model = vertexPosition_instance + instancePosition_model.xyz;
  gl_Position = VP * vec4(vertexPosition_model, 1.0f);
  vec3 vertexPosition_camera = (V * vec4(vertexPosition_model, 1.0f)).xyz;
  eyeDirection_camera = -vertexPosition_camera;
  normal_camera = (V * vec4(vertexNormal_model, 0)).xyz;
  vertexColor = instanceColor.xyz;
}
